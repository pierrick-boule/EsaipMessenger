//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package org.esaip.messenger;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.ProgressBar;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import org.esaip.messenger.R.id;
import org.esaip.messenger.R.layout;
import org.esaip.messenger.rest.RestClient_;
import org.esaip.messenger.util.MyPrefs_;

public final class Dashboard_
    extends Dashboard
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.dashboard);
    }

    private void init_(Bundle savedInstanceState) {
        sprefs = new MyPrefs_(this);
        myRestClient = new RestClient_();
    }

    private void afterSetContentView_() {
        progressBarDash = ((ProgressBar) findViewById(id.progressBarDash));
        afterViews();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    public static Dashboard_.IntentBuilder_ intent(Context context) {
        return new Dashboard_.IntentBuilder_(context);
    }

    @Override
    public void startError() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    Dashboard_.super.startError();
                } catch (RuntimeException e) {
                    Log.e("Dashboard_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void startConnected() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    Dashboard_.super.startConnected();
                } catch (RuntimeException e) {
                    Log.e("Dashboard_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void login(final String username, final String password) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    Dashboard_.super.login(username, password);
                } catch (RuntimeException e) {
                    Log.e("Dashboard_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, Dashboard_.class);
        }

        public Intent get() {
            return intent_;
        }

        public Dashboard_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

    }

}
