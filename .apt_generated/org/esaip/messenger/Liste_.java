//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package org.esaip.messenger;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.EditText;
import android.widget.ListView;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import com.googlecode.androidannotations.api.SdkVersionHelper;
import org.esaip.messenger.R.id;
import org.esaip.messenger.R.layout;
import org.esaip.messenger.rest.RestClient_;
import org.esaip.messenger.util.MyPrefs_;

public final class Liste_
    extends Liste
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.liste);
    }

    private void init_(Bundle savedInstanceState) {
        sprefs = new MyPrefs_(this);
        myRestClient = new RestClient_();
    }

    private void afterSetContentView_() {
        newMessage = ((EditText) findViewById(id.newMessage));
        listViewMessages = ((ListView) findViewById(id.listViewMessages));
        {
            View view = findViewById(id.refresh);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        Liste_.this.send();
                    }

                }
                );
            }
        }
        after();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static Liste_.IntentBuilder_ intent(Context context) {
        return new Liste_.IntentBuilder_(context);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(org.esaip.messenger.R.menu.menuconnected, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        boolean handled = super.onOptionsItemSelected(item);
        if (handled) {
            return true;
        }
        switch (item.getItemId()) {
            case id.deco:
                decoSelected();
                return true;
            default:
                return false;
        }
    }

    @Override
    public void updateui() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    Liste_.super.updateui();
                } catch (RuntimeException e) {
                    Log.e("Liste_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void sendmessage() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    Liste_.super.sendmessage();
                } catch (RuntimeException e) {
                    Log.e("Liste_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void getmessages() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    Liste_.super.getmessages();
                } catch (RuntimeException e) {
                    Log.e("Liste_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, Liste_.class);
        }

        public Intent get() {
            return intent_;
        }

        public Liste_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

    }

}
